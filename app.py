import streamlit as st
import io
import sys

from main import main_function

# initialize page config
st.set_page_config(page_title="Price Pattern Detection", page_icon=":chart_with_upwards_trend:", layout="centered")
st.title(" :chart_with_downwards_trend: Price Pattern Detection")
st.markdown("<style>div.block-container{padding-top:1rem;}<style>", unsafe_allow_html=True)

# parameter preparation
model = "model/best.pt"

st.subheader("About the Model")
about = '''
‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏ô‡∏µ‡πâ‡∏°‡∏µ‡∏ß‡∏±‡∏ï‡∏ñ‡∏∏‡∏õ‡∏£‡∏∞‡∏™‡∏á‡∏Ñ‡πå‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡∏´‡∏≤ Price Patterns ‡∏£‡∏π‡∏õ‡πÅ‡∏ö‡∏ö‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡∏∂‡πâ‡∏ô‡πÉ‡∏ô‡∏ï‡∏•‡∏≤‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏Ç‡∏≤‡∏¢‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå 
‡πÇ‡∏î‡∏¢‡∏à‡∏∞‡∏Ñ‡πà‡∏≠‡∏¢‡πÜ ‡πÅ‡∏™‡∏Å‡∏ô‡∏´‡∏≤‡∏ó‡∏µ‡πà‡∏•‡∏∞‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤ ‡∏à‡∏≤‡∏Å‡∏õ‡∏±‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á‡πÑ‡∏õ‡∏¢‡∏±‡∏á‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
'''
st.markdown(about)

how_ex = st.expander("How This Model Work üßê")
with how_ex:
    st.subheader("How This Model Works!")
    how = '''
    1. ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏£‡∏≤‡∏Ñ‡∏≤‡∏Ç‡∏≠‡∏á Asset ‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á ‡∏ï‡∏≤‡∏°‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î `Period` ‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
    2. ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î ‡πÇ‡∏î‡∏¢‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÑ‡∏î‡πâ‡∏à‡∏∞‡∏Ç‡∏∂‡πâ‡∏ô‡∏≠‡∏¢‡∏π‡πà‡∏Å‡∏±‡∏ö `Period` ‡πÅ‡∏•‡∏∞ `Timeframe`
        - ‡∏´‡∏≤‡∏Å‡πÄ‡∏•‡∏∑‡∏≠‡∏Å `Timeframe day (1d)` ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏∞‡∏°‡∏µ‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î 15 ‡πÅ‡∏ó‡πà‡∏á
        - ‡πÉ‡∏ô‡∏Ç‡∏ì‡∏∞ `Timeframe 1 hour (1h)` ‡∏à‡∏∞‡∏°‡∏µ‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô 72 ‡πÅ‡∏ó‡πà‡∏á‡∏ï‡πà‡∏≠ 1 ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û
    3. ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏à‡∏∞‡πÄ‡∏£‡∏¥‡πà‡∏°‡πÅ‡∏™‡∏Å‡∏ô‡∏ó‡∏µ‡∏•‡∏∞‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏à‡∏≤‡∏Å‡∏†‡∏≤‡∏û‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏õ‡∏†‡∏≤‡∏û‡∏™‡∏∏‡∏î‡∏ó‡πâ‡∏≤‡∏¢ 
        - ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡πÅ‡∏™‡∏Å‡∏ô‡πÅ‡∏Ñ‡πà‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î‡πÑ‡∏î‡πâ‡πÇ‡∏î‡∏¢‡∏Å‡∏≥‡∏´‡∏ô‡∏î `Latest Periods` :blue[True]
    4. Price Patterns ‡∏ó‡∏µ‡πà‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏ï‡∏£‡∏ß‡∏à‡∏à‡∏±‡∏ö‡πÑ‡∏î‡πâ ‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢ 
        - Double top
        - Double Bottom
        - Head and Shoulder
        - Inverse Head and Shoulder
    5. ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏à‡∏≠ Pattern ‡πÇ‡∏°‡πÄ‡∏î‡∏•‡∏à‡∏∞‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô ‡∏ì ‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠ ‡πÅ‡∏•‡∏∞‡πÉ‡∏´‡πâ‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏î‡πâ‡∏ß‡∏¢
        - Patterns ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠‡πÉ‡∏ô‡∏£‡∏π‡∏õ‡∏†‡∏≤‡∏û‡∏ô‡∏±‡πâ‡∏ô
        - ‡∏Ñ‡πà‡∏≤ Confidece ‡∏Ç‡∏≠‡∏á Patterns ‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠
        - ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏à‡∏≠ ‡πÅ‡∏•‡∏∞‡∏´‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô‡πÄ‡∏ó‡πà‡∏≤‡πÑ‡∏´‡∏£‡πà'''
    st.markdown(how)

st.subheader("Inputs")
inputs = '''- `symbol` : ‡∏™‡∏±‡∏ç‡∏•‡∏±‡∏Å‡∏©‡∏ì‡πå‡∏Ç‡∏≠‡∏á‡∏™‡∏¥‡∏ô‡∏ó‡∏£‡∏±‡∏û‡∏¢‡πå (crypto ‡∏ï‡πâ‡∏≠‡∏á‡∏°‡∏µ -USD ‡∏•‡∏á‡∏ó‡πâ‡∏≤‡∏¢) 
- `period` : ‡∏ä‡πà‡∏ß‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏¢‡πâ‡∏≠‡∏ô‡∏´‡∏•‡∏±‡∏á (‡∏´‡∏ô‡πà‡∏ß‡∏¢‡πÄ‡∏õ‡πá‡∏ô ‡∏ß‡∏±‡∏ô)
- `timefrmae` : ‡πÄ‡∏ß‡∏•‡∏≤‡∏ï‡πà‡∏≠‡πÅ‡∏ó‡πà‡∏á‡πÄ‡∏ó‡∏µ‡∏¢‡∏ô
- `confidence` : ‡∏Ñ‡πà‡∏≤‡∏Ñ‡∏ß‡∏≤‡∏°‡∏°‡∏±‡πà‡∏ô‡πÉ‡∏à‡∏ó‡∏µ‡πà‡∏à‡∏∞‡∏ï‡∏£‡∏ß‡∏à‡πÄ‡∏à‡∏≠ pattern
- `latest Period` : True ‡∏à‡∏∞ detect ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏†‡∏≤‡∏û‡∏•‡πà‡∏≤‡∏™‡∏∏‡∏î False ‡∏à‡∏∞‡∏•‡∏π‡∏õ‡∏à‡∏ô‡∏Å‡∏ß‡πà‡∏≤‡∏à‡∏∞ detect ‡πÄ‡∏à‡∏≠'''
st.markdown(inputs)

col1, col2, col3, col4, col5, col6 = st.columns(6)
with col1:
    symbol = st.text_input("Symbol", value="btc-usd")
    symbol = symbol.upper()
with col2:
    #period = int(st.text_input("Period (days)", value=30))
    period = st.slider("Period", min_value=30, max_value=300, value=30, step=30)
with col3:
    tf = st.selectbox("Timeframe", options= ["1h", "1d"]) 
with col4:
    confidence = st.slider("Confidence", min_value=0.1, max_value=1.0, value=0.5, step=0.1)
with col5:
    last_day = st.selectbox("Latest Period", options= [False, True])
with col6:
    st.markdown(
    """
    <style>
        div.stButton > button {
            margin-top: 12px; 
        }
    </style>
    """,
    unsafe_allow_html=True
    )
    trigger = st.button("Let's Try!", type="primary",)
    

st.subheader("Output")
if trigger:
    with st.spinner("ü´† Hold on a moment!!"):
        try:
            result = main_function(symbol=symbol,
                                    period=period,
                                    timeframe=tf,
                                    model=model,
                                    conf=confidence,
                                    last_day=last_day)
        except Exception as e:
            st.error("Please check your symbol agian (if crypto need '-usd' e.g. btc-usd)", icon="üòµ‚Äçüí´")
            st.markdown("More detail about symbols please go checking at [Yahoo Finance](https://finance.yahoo.com/lookup/)")
            sys.exit()

        image = result["image"]
        image_byte = io.BytesIO()
        image.save(image_byte, format="PNG")
        if result["class"][0] == "No Detection":
            st.warning("No Pattern Found", icon="ü•≤")
            st.subheader("Image Output")
            st.image(image_byte, caption="Image Result", use_column_width=True)
        elif len(result["class"]) > 1:
            # classes_str = ", ".join(result["class"][:-1]) + f" and {result['class'][-1]}"
            # conf_strings = list(map(str, result["conf"]))
            # conf = ", ".join(conf_strings[:-1]) + f" and {conf_strings[-1]}"
            text_result = f"Found {result['class']} with {result['conf']} confidence\nabout {result['when']['days']} days, {result['when']['hours']} hours ago"
            st.success(f"{len(result['class'])} Patterns Found", icon="üòé")
            st.text(text_result)
            st.subheader("Image Output")
            st.image(image_byte, caption="Image Result", use_column_width=True)
        else:
            text_result = f"Found '{result['class'][0]}' with {result['conf'][0]:.2f} confidence\nabout {result['when']['days']} days and {result['when']['hours']} hours ago"
            st.success(f"{len(result['class'])} Pattern Found", icon="üòé")
            st.text(text_result)
            st.subheader("Image Output")
            st.image(image_byte, caption="Data from Yahoo Finance", use_column_width=True)